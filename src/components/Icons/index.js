import React from "react";
import styled from "styled-components";
import icnRefresh from "../../assets/icon-refresh.svg";
import icnSettings from "../../assets/icon-settings.svg";
import icnClose from "../../assets/icon-close.svg";

export const ArrowDown = props => {
  const { color } = props;
  const fillColor = color || "#969696";
  return (
    <svg
      width="14"
      height="15"
      viewBox="0 0 14 15"
      fill={fillColor}
      xmlns="http://www.w3.org/2000/svg">
      <path d="M0 7H4V0H10V7H14L7 15L0 7Z" />
    </svg>
  );
};

export const Spinner = props => {
  const { color } = props;
  const fillColor = color || "#969696";
  return (
    <svg
      width="15"
      height="15"
      viewBox="0 0 15 15"
      fill={fillColor}
      xmlns="http://www.w3.org/2000/svg">
      <path d="M4.40291 11.8113C4.40291 11.217 3.92579 10.7399 3.33148 10.7399C2.74554 10.7399 2.26005 11.217 2.26005 11.8113C2.26005 12.3973 2.74554 12.8828 3.33148 12.8828C3.92579 12.8828 4.40291 12.3973 4.40291 11.8113ZM8.57144 13.5357C8.57144 12.9414 8.09432 12.4643 7.50001 12.4643C6.9057 12.4643 6.42858 12.9414 6.42858 13.5357C6.42858 14.13 6.9057 14.6071 7.50001 14.6071C8.09432 14.6071 8.57144 14.13 8.57144 13.5357ZM2.67858 7.64282C2.67858 7.04851 2.20146 6.57139 1.60715 6.57139C1.01284 6.57139 0.535721 7.04851 0.535721 7.64282C0.535721 8.23713 1.01284 8.71425 1.60715 8.71425C2.20146 8.71425 2.67858 8.23713 2.67858 7.64282ZM12.74 11.8113C12.74 11.217 12.2545 10.7399 11.6685 10.7399C11.0742 10.7399 10.5971 11.217 10.5971 11.8113C10.5971 12.3973 11.0742 12.8828 11.6685 12.8828C12.2545 12.8828 12.74 12.3973 12.74 11.8113ZM4.67077 3.4743C4.67077 2.73769 4.06809 2.13501 3.33148 2.13501C2.59487 2.13501 1.99219 2.73769 1.99219 3.4743C1.99219 4.2109 2.59487 4.81358 3.33148 4.81358C4.06809 4.81358 4.67077 4.2109 4.67077 3.4743ZM14.4643 7.64282C14.4643 7.04851 13.9872 6.57139 13.3929 6.57139C12.7986 6.57139 12.3214 7.04851 12.3214 7.64282C12.3214 8.23713 12.7986 8.71425 13.3929 8.71425C13.9872 8.71425 14.4643 8.23713 14.4643 7.64282ZM9.10715 1.74997C9.10715 0.862689 8.38728 0.142822 7.50001 0.142822C6.61273 0.142822 5.89286 0.862689 5.89286 1.74997C5.89286 2.63724 6.61273 3.35711 7.50001 3.35711C8.38728 3.35711 9.10715 2.63724 9.10715 1.74997ZM13.5435 3.4743C13.5435 2.44472 12.6981 1.5993 11.6685 1.5993C10.6306 1.5993 9.79353 2.44472 9.79353 3.4743C9.79353 4.51224 10.6306 5.3493 11.6685 5.3493C12.6981 5.3493 13.5435 4.51224 13.5435 3.4743Z" />
    </svg>
  );
};
export const Close = props => {
  const { color } = props;
  const fillColor = color || "#969696";
  return (
    <svg
      width="12"
      height="13"
      viewBox="0 0 12 13"
      fill={fillColor}
      xmlns="http://www.w3.org/2000/svg">
      <path d="M11.3136 9.96983C11.3136 9.73267 11.2187 9.4955 11.048 9.32474L8.25892 6.53568L11.048 3.74662C11.2187 3.57586 11.3136 3.33869 11.3136 3.10153C11.3136 2.86436 11.2187 2.6272 11.048 2.45644L9.7578 1.16626C9.58705 0.995501 9.34988 0.900635 9.11271 0.900635C8.87555 0.900635 8.63839 0.995501 8.46763 1.16626L5.67856 3.95532L2.8895 1.16626C2.71874 0.995501 2.48158 0.900635 2.24441 0.900635C2.00725 0.900635 1.77008 0.995501 1.59932 1.16626L0.309143 2.45644C0.138384 2.6272 0.0435181 2.86436 0.0435181 3.10153C0.0435181 3.33869 0.138384 3.57586 0.309143 3.74662L3.09821 6.53568L0.309143 9.32474C0.138384 9.4955 0.0435181 9.73267 0.0435181 9.96983C0.0435181 10.207 0.138384 10.4442 0.309143 10.6149L1.59932 11.9051C1.77008 12.0759 2.00725 12.1707 2.24441 12.1707C2.48158 12.1707 2.71874 12.0759 2.8895 11.9051L5.67856 9.11604L8.46763 11.9051C8.63839 12.0759 8.87555 12.1707 9.11271 12.1707C9.34988 12.1707 9.58705 12.0759 9.7578 11.9051L11.048 10.6149C11.2187 10.4442 11.3136 10.207 11.3136 9.96983Z" />
    </svg>
  );
};

export const Settings = props => {
  const { color } = props;
  const fillColor = color || "#969696";
  return (
    <svg
      width="15"
      height="15"
      viewBox="0 0 15 15"
      fill={fillColor}
      xmlns="http://www.w3.org/2000/svg">
      <path d="M9.71429 7.28572C9.71429 8.62333 8.62333 9.71429 7.28572 9.71429C5.9481 9.71429 4.85714 8.62333 4.85714 7.28572C4.85714 5.9481 5.9481 4.85714 7.28572 4.85714C8.62333 4.85714 9.71429 5.9481 9.71429 7.28572ZM14.5714 6.25167C14.5714 6.0904 14.4576 5.93862 14.2963 5.91016L12.5603 5.64453C12.4654 5.33147 12.3326 5.01842 12.1713 4.71484C12.4939 4.26897 12.8449 3.85156 13.1674 3.41518C13.2148 3.34877 13.2433 3.28237 13.2433 3.19699C13.2433 3.12109 13.2243 3.0452 13.1769 2.98828C12.7785 2.42857 12.1144 1.8404 11.6116 1.37556C11.5452 1.31864 11.4598 1.28069 11.3744 1.28069C11.2891 1.28069 11.2037 1.30915 11.1468 1.36607L9.79967 2.38114C9.52455 2.23884 9.23996 2.125 8.94587 2.03013L8.68025 0.284598C8.66127 0.123326 8.50949 0 8.33873 0H6.2327C6.06194 0 5.92913 0.11384 5.89118 0.265625C5.7394 0.834821 5.68248 1.45145 5.61607 2.03013C5.32199 2.125 5.0279 2.24833 4.75279 2.39062L3.44364 1.37556C3.36775 1.31864 3.28237 1.28069 3.19699 1.28069C2.87444 1.28069 1.59375 2.66574 1.36607 2.9788C1.31864 3.0452 1.28069 3.11161 1.28069 3.19699C1.28069 3.28237 1.31864 3.35826 1.37556 3.42466C1.72656 3.85156 2.06808 4.27846 2.39062 4.73382C2.23884 5.01842 2.11551 5.30301 2.02065 5.60658L0.256138 5.87221C0.113839 5.90067 0 6.07143 0 6.21373V8.31975C0 8.48103 0.113839 8.63281 0.275112 8.66127L2.01116 8.91741C2.10603 9.23996 2.23884 9.55301 2.40011 9.85659C2.07757 10.3025 1.72656 10.7199 1.40402 11.1562C1.35658 11.2227 1.32812 11.2891 1.32812 11.3744C1.32812 11.4503 1.3471 11.5262 1.39453 11.5926C1.79297 12.1429 2.45703 12.731 2.95982 13.1864C3.02623 13.2528 3.11161 13.2907 3.19699 13.2907C3.28237 13.2907 3.36775 13.2623 3.43415 13.2054L4.77176 12.1903C5.04688 12.3326 5.33147 12.4464 5.62556 12.5413L5.89118 14.2868C5.91016 14.4481 6.06194 14.5714 6.2327 14.5714H8.33873C8.50949 14.5714 8.6423 14.4576 8.68025 14.3058C8.83203 13.7366 8.88895 13.12 8.95536 12.5413C9.24944 12.4464 9.54353 12.3231 9.81864 12.1808L11.1278 13.2054C11.2037 13.2528 11.2891 13.2907 11.3744 13.2907C11.697 13.2907 12.9777 11.8962 13.2054 11.5926C13.2623 11.5262 13.2907 11.4598 13.2907 11.3744C13.2907 11.2891 13.2528 11.2037 13.1959 11.1373C12.8449 10.7104 12.5033 10.293 12.1808 9.82812C12.3326 9.55301 12.4464 9.26842 12.5508 8.96484L14.3058 8.69922C14.4576 8.67076 14.5714 8.5 14.5714 8.3577V6.25167Z" />
    </svg>
  );
};

export const NewBranch = props => {
  const { color } = props;
  const fillColor = color || "#005533";
  return (
    <svg
      width="27"
      height="25"
      viewBox="0 0 27 25"
      fill={fillColor}
      xmlns="http://www.w3.org/2000/svg">
      <path d="M20 9V12H18V9H15V7H18V4H20V7H23V9H20Z" />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M19 16C23.4183 16 27 12.4183 27 8C27 3.58172 23.4183 0 19 0C14.5817 0 11 3.58172 11 8C11 11.6181 13.4018 14.6752 16.6981 15.6639C15.8393 17.8567 14.93 18.8257 13.7814 19.3362C13.0852 19.6456 12.2283 19.8198 11.1005 19.9094C10.177 19.9828 9.12092 19.9967 7.87382 19.9994C7.51188 18.5941 6.4054 17.4877 5 17.126V10.874C6.72523 10.4299 8 8.86384 8 7C8 4.79086 6.20914 3 4 3C1.79086 3 0 4.79086 0 7C0 8.86384 1.27477 10.4299 3 10.874V17.126C1.27477 17.5701 0 19.1362 0 21C0 23.2091 1.79086 25 4 25C5.86404 25 7.43028 23.725 7.87413 21.9994C9.13026 21.9969 10.2582 21.9826 11.2589 21.9031C12.4905 21.8052 13.6023 21.6044 14.5936 21.1638C16.506 20.3139 17.7212 18.689 18.7113 15.9949C18.8071 15.9983 18.9034 16 19 16ZM19 14C22.3137 14 25 11.3137 25 8C25 4.68629 22.3137 2 19 2C15.6863 2 13 4.68629 13 8C13 11.3137 15.6863 14 19 14ZM6 7C6 8.10457 5.10457 9 4 9C2.89543 9 2 8.10457 2 7C2 5.89543 2.89543 5 4 5C5.10457 5 6 5.89543 6 7ZM6 21C6 22.1046 5.10457 23 4 23C2.89543 23 2 22.1046 2 21C2 19.8954 2.89543 19 4 19C5.10457 19 6 19.8954 6 21Z"
      />
    </svg>
  );
};

export const NewFile = props => {
  const { color } = props;
  const fillColor = color || "#005533";
  return (
    <svg
      width="20"
      height="25"
      viewBox="0 0 20 25"
      fill={fillColor}
      xmlns="http://www.w3.org/2000/svg">
      <path d="M9 10H11V13H14V15H11V18H9V15H6V13H9V10Z" />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M2 0C0.895431 0 0 0.89543 0 2V23C0 24.1046 0.895431 25 2 25H18C19.1046 25 20 24.1046 20 23V7.41422C20 7.149 19.8946 6.89465 19.7071 6.70711L13.5858 0.585793C13.2107 0.21072 12.702 7.42271e-06 12.1716 7.05481e-06L2 0ZM2 23V2L11.1327 2.00001L12.1327 9H18V23H2ZM17.1716 7L13.3166 3.14502L13.8673 7H17.1716Z"
      />
    </svg>
  );
};

export const NewCommit = props => {
  const { color } = props;
  const fillColor = color || "#005533";
  return (
    <svg
      width="33"
      height="16"
      viewBox="0 0 33 16"
      fill={fillColor}
      xmlns="http://www.w3.org/2000/svg">
      <path d="M26 4V7H29V9H26V12H24V9H21V7H24V4H26Z" />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M25 16C29.4183 16 33 12.4183 33 8C33 3.58172 29.4183 0 25 0C20.9204 0 17.554 3.05369 17.0619 7H11.874C11.4299 5.27477 9.86384 4 8 4C6.13616 4 4.57006 5.27477 4.12602 7H0V9H4.12602C4.57006 10.7252 6.13616 12 8 12C9.86384 12 11.4299 10.7252 11.874 9H17.0619C17.554 12.9463 20.9204 16 25 16ZM25 2C21.6863 2 19 4.68629 19 8C19 11.3137 21.6863 14 25 14C28.3137 14 31 11.3137 31 8C31 4.68629 28.3137 2 25 2ZM8 10C9.10457 10 10 9.10457 10 8C10 6.89543 9.10457 6 8 6C6.89543 6 6 6.89543 6 8C6 9.10457 6.89543 10 8 10Z"
      />
    </svg>
  );
};

const IconContainer = styled.div`
  margin-right: ${({ mr = 0 }) => mr};
`;

const getIcon = iconName => {
  switch (iconName) {
    case "new-branch":
      return NewBranch;
    case "new-file":
      return NewFile;
    case "new-commit":
      return NewCommit;
    default:
      null;
  }
};

export const ButtonIcon = props => {
  const { color, name, mr } = props;
  const Icon = getIcon(name);
  return (
    <IconContainer mr={mr}>
      <Icon fillColor={color} />
    </IconContainer>
  );
};

const ActionContainer = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  cursor: ${({ disabled }) => (disabled ? "not-allowed" : "pointer")};
  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};
`;

export const Action = props => {
  const { icon, disabled, onClick } = props;
  let icnSrc = null;
  switch (icon) {
    case "close":
      icnSrc = <Close />;
      break;
    case "settings":
      icnSrc = <Settings />;
      break;
    default:
      break;
  }
  return (
    <ActionContainer onClick={() => !disabled && onClick()} disabled={disabled}>
      {icnSrc}
    </ActionContainer>
  );
};
